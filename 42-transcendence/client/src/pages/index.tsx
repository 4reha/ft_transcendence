import Head from 'next/head'
import Image from 'next/image'
import { Inter, Nabla } from '@next/font/google'
import Layout from '@/components/Layout'
import LoginContent from '@/components/login/LoginContent'
import NavBarLayout from '@/components/Layout'
import { AnimatePresence, motion ,AnimateSharedLayout} from 'framer-motion'
import { Disclosure, Menu, Transition } from '@headlessui/react'
import { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'
import Router, { useRouter } from 'next/router'
import { useState } from 'react'
const inter = Inter({ subsets: ['latin'] })
function classNames(...classes:any) {
  return classes.filter(Boolean).join(' ')
}

export default function Home() {
  const router = useRouter();

  const [state,setState] = useState([
    { name: 'Home', current: true},
    { name: 'About', current: false},
    { name: 'Contact', current: false},
  ]);
  // const navigation = [
  //   { name: 'Home', current: true},
  //   { name: 'About', current: false},
  //   { name: 'Contact', current: false},
  // ]

  function handleClick(e:any,index:number) {
    e.preventDefault();
    const updatedState = state.map((item,i) =>{
      if (i == index)
        item.current=true;
      else
        item.current=false;
      return item;
    })
    setState(updatedState);
  }

  return (
    <>
      <Head>
        <title>Ping Pong</title>
        <link href='https://fonts.googleapis.com/css?family=Baloo' rel='stylesheet'></link>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Disclosure as="nav" className="bg-gray-800">
        {({ open }) => (
        <>
          <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
            <div className="relative flex h-20 items-center ">
              <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
                
                {/* Mobile menu button*/}
                
                <Disclosure.Button className="inline-flex items-center justify-center 
                    rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white 
                    focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
                  <span className="sr-only">Open main menu</span>
                  {open ? (
                    <XMarkIcon className="block h-6 w-6" aria-hidden="true" />
                  ) : (
                    <Bars3Icon className="block h-6 w-6" aria-hidden="true" />
                  )}
                </Disclosure.Button>
              </div>
              <div className="flex flex-1 items-center justify-center sm:items-stretch 
                sm:justify-between">
                <div className="flex flex-shrink-0 items-center">
                  <img
                    className="block h-12 w-auto lg:hidden"
                    src="logo.png"
                    alt="Pognitor-logo"
                  />
                  <img
                    className="hidden h-12 w-auto lg:block"
                    src="logo.png"
                    alt="Pognitor-logo"
                  />
                </div>
                <div className="hidden sm:ml-6 sm:block">
                  <div className="flex space-x-4">
                    {state.map((item,index) => (
                      <button 
                        key={item.name}
                        onClick={(e)=>handleClick(e,index)}
                        className={classNames(
                           item.current ? ' text-[#0097E2]' : 'text-white hover:text-[#656565] ease-in duration-200',
                          'px-3 py-2 rounded-md text-md font-bold'
                        )}
                      >
                        {item.name}
                      </button>
                    ))}
                  </div>
                </div>
              </div>
              <div className="absolute inset-y-0 right-0 flex items-center
                      pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
                <button
                  type="button"
                  className="rounded-full bg-gray-800 p-1 text-gray-400
                   hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
                >
                </button>
              </div>
            </div>
          </div>

          <Disclosure.Panel className="sm:hidden">
            <div className="space-y-1 px-2 pt-2 pb-3">
              {state.map((item,index) => (
                    <button 
                      key={item.name}
                      onClick ={(e)=>handleClick(e,index)}
                      className={classNames(
                            item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',
                            'block px-3 py-2 rounded-md text-base font-medium'
                          )}

                      >
                      {item.name}
                    </button>
              ))}
            </div>
          </Disclosure.Panel>
        </>
      )}
    </Disclosure>
<AnimateSharedLayout>
       {state[0].current && <div className="relative pt-12 bg-blueGray-50">
          <div className="items-center flex flex-col-reverse justify-center xl:flex-row gap-10">
            <div className=" px-4 shrink-0">
            
                {/* <AnimatePresence> */}
                  <motion.div 
                    key="img"
                    layoutId='test'
                    initial={true}
                    animate={{y:0,rotate:0}}
                    transition={{ type: "Tween"}}
                    exit={{opacity:0}}>
                    <Image 
                      src="/game.png"
                      alt='game'
                      width={700}
                      height={600}
                    />
                  </motion.div>
                {/* </AnimatePresence> */}
              
            </div>
            <div className="text-center xl:text-left">
              <h3 className="text-3xl font-bold xl:text-4xl text-white mb-1 md:mb-10">Ponigator</h3>
              <p className="mt-4 text-xl xl:text-4xl md:text-3xl leading-relaxed mb-1 md:mb-10 break-words text-white ">
                  The Ultimate Exprerience For The Mighty Ping Context!
              </p>
              <div className='pt-5'>
                <button className=" uppercase mx-auto shadow bg-[#0097E2] hover:bg-[#2C3B7C] transform transition duration-300 
                  hover:text-l hover:scale-110  text-white text-s hover:text-l 
                  font-bold py-2 px-12 rounded-full">
                  JOIN NOW
                </button>
              </div>
            </div>
          </div>
      </div>}
        {state[1].current &&  
              <div className="relative  bg-blueGray-50">
              <div className="items-center flex flex-row  justify-center  gap-10">
                
        
                        {/* <AnimatePresence> */}
                    <motion.div 
                      key="img"
                      layoutId='test'
                      initial={true}
                      animate={{rotate:-90}}
                      transition={{ type: "Tween"}}
                      exit={{opacity:0}}>
                      <div className='w-3/5 sm:max-xl:w-4/5 xl:w-full'>
                        <Image 
                          src="/game.png"
                          alt='game'
                          width={800}
                          height={800}
                        />
                      </div>
                    </motion.div>
                  {/* </AnimatePresence> */}
                  
          
               
                <div className="text-center xl:text-left">
              
                </div>
              </div>
          </div>
            // <div className=" flex flex-row">
                // {/* <AnimatePresence> */}
                //   <motion.div 
                //     key="img"
                //     layoutId='test'
                //     initial={true}
                //     animate={{x:300,y:0,rotate:-90}}
                //     transition={{ type: "spring", stiffness: 50}}
                //     exit={{opacity:0}}>
                //     <div className=''>

                //       <Image 
                //         src="/game.png"
                //         alt='game'
                //         width={700}
                //         height={600}
                //       />
                //     </div>
                //   </motion.div>
                // {/* </AnimatePresence> */}
            // </div>
          }
      </AnimateSharedLayout>
    </>
  ) 
}

// Home.getLayout = function getLayout(page : React.ReactNode) {
//   return (
//     <NavBarLayout>
//         {page}
//     </NavBarLayout>
//   )
// }